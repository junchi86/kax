{"version":3,"sources":["assets/logo.png","Components/Section.js","Components/Loader.js","Components/Poster.js","Components/Error.js","Components/PopularComponent.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/TvComponent.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Message.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Cast.js","Components/CastProfile.js","Routes/Detail/Company/Company.js","Routes/Detail/Country/Country.js","Components/Season.js","Components/Recommendations.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/CastProfileImages.js","Routes/Detail/CastPeople/CastPerson.js","Routes/Detail/CastPeople/CastPeople.js","Routes/Detail/SeasonDetail/SeasonPresenter.js","Routes/Detail/SeasonDetail/index.js","Routes/Detail/SeasonDetail/SeasonContainer.js","Components/SuperPoster.js","Components/Footer.js","Components/SuperSection.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/none-png-2.png"],"names":["module","exports","Container","styled","div","Title","p","ViewMore","Link","Grid","Section","title","children","section","to","Loader","data-text","Image","props","bgUrl","Rating","span","ImageContainer","Year","Poster","id","imgUrl","rating","year","isMovie","noneImage","role","aria-label","length","substring","Error","data","history","useHistory","useEffect","setTimeout","goBack","clearTimeout","BackDrop","url","Data","PopularComponent","HomePresenter","nowPlaying","upcoming","popular","error","loading","randomId","Helmet","map","i","key","poster_path","vote_average","release_date","color","api","axios","create","baseURL","params","api_key","process","language","moviesApi","get","page","append_to_response","term","query","encodeURIComponent","tvApi","season","HomeContainer","state","results","random","Math","floor","this","setState","React","Component","TvComponent","TVPresenter","topRated","airingToday","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","searchTerm","searchResult","movieResult","tvResult","onSubmit","onChange","location","pathname","split","value","placeholder","original_title","original_name","Message","SearchContainer","match","useState","change","setChange","termResult","setTermResult","getData","a","prev","e","preventDefault","push","target","Cast","Title1","CastProfile","char","Root","img","Company","type","parsedId","parseInt","result","isNaN","production_companies","getPerson","index","src","logo_path","USS","Country","network","production_countries","networks","getCountry","iso_3166_1","Season","Recommendations","Backdrop","imgBg","Content","Cover","h3","ItemContainer","Item","Divider","Overview","IMDb","CastContainer","VideoContainer","iframe","Media","ButtonContainer","ButtonLink","NavLink","Foot","DetailPresenter","imdb_id","credits","recommendations","backdrop_path","href","rel","runtime","episode_run_time","genres","overview","character","profile_path","videos","site","allowFullScreen","frameBorder","seasons","season_number","activeStyle","background","borderBottom","path","exact","component","from","DetailContainer","cast","prevProps","prevId","prevType","Header","header","List","ul","li","current","Seader","Slink","withRouter","style","marginRight","cursor","onClick","logo","indexOf","modal","CastProfileImages","setModal","CastPerson","birthday","deathday","place_of_birth","known_for_department","gender","also_known_as","biography","className","images","profiles","file_path","CastPeople","SeasonPresenter","episodes","episode_number","air_date","still_path","SeasonContainer","parsedSeason","SuperPoster","ToTop","Footer","toggleVisibility","window","pageYOffset","addEventListener","removeEventListener","document","visibility","opacity","scrollTo","top","behavior","Sect","SuperSection","search","resultShows","setPage","scroll","setScroll","setTitle","movies1","movies2","movies","shows1","shows2","shows","handleScroll","scrollY","documentElement","clientHeight","scrollHeight","Home","TV","Search","SeasonDetail","Detail","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a4c66510.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5e9629bb.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n:not(:last-child){\r\n    margin-bottom: 50px;\r\n}\r\n@media screen and (max-width:768px) {\r\n    :not(:last-child){\r\n    margin-bottom: 0px;\r\n}\r\n}\r\n`\r\n\r\nconst Title = styled.p`\r\n    position:relative;\r\n    font-size: 18px;\r\n    padding:0 0 20px;\r\n    font-weight:600;\r\n    @media screen and (max-width:768px) {\r\n        padding:10px 0 5px 5px;\r\n    }\r\n`\r\nconst ViewMore = styled(Link)`\r\n    font-size:15px;\r\n    font-weight:400;\r\n    color:tomato;\r\n    margin-left:30px;\r\n    padding: 0px 10px 2px;\r\n    border:2px solid tomato;\r\n    border-radius:5px;\r\n    transition:0.2s all;\r\n    &:hover{\r\n        color:white;\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        display:block;\r\n        align-items:center;\r\n        position:absolute;\r\n        padding:2px 5px;\r\n        bottom:2px;\r\n        right:5px;\r\n        color:#F5C518;\r\n        border:1px solid tomato;\r\n    }\r\n\r\n`\r\n\r\nconst Grid = styled.div`\r\n    margin-top:10px;\r\n    display:flex;   \r\n    overflow: auto;\r\n    width:100%;\r\n    height:100%;\r\n    -ms-overflow-style: none;\r\n    &::-webkit-scrollbar {\r\n        background:rgba(0,0,0,0.1)\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(255,255,255,0.5);\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        width:100%;\r\n        margin-top:10px;\r\n        display:flex;\r\n        overflow-x:auto\r\n}\r\n    \r\n`\r\n\r\nconst Section = ({ title, children, section }) => {\r\n\r\n    return (\r\n        <Container>\r\n            <Title>{title}<ViewMore to={section} >더 보기</ViewMore></Title>\r\n            <Grid>{children}</Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.any\r\n}\r\n\r\nexport default Section","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loader = styled.div`\r\n    position:absolute;\r\n    top:50%;\r\n    left:50%;\r\n    transform:translate(-50%,-50%);\r\n\r\nh1 {\r\n    position: relative;\r\n    color: rgba(0, 0, 0, .3);\r\n    font-size: 5em;\r\n    line-height:5em;\r\n    text-align:center;\r\n}\r\nh1:before {\r\n    content: attr(data-text);\r\n    line-height:5em;\r\n    max-width:100%;\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    color: #fff;\r\n    animation: loading 0.5s linear infinite;\r\n}\r\n@keyframes loading {\r\n    0% {\r\n        max-width: 0;\r\n    }\r\n}\r\n@media screen and (max-width:768px){\r\n    h1{\r\n        font-size:2em;\r\n    }\r\n}\r\n`\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <Loader ><br /><br />\r\n                <h1 data-text={'로딩...'}>{'로딩...'}</h1>\r\n            </Loader >\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport noneImage from '../assets/none-png-2.png'\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n    min-height:350px;\r\n    @media screen and (max-width:768px) {\r\n        min-height:220px;\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    width:200px;\r\n    height:300px;\r\n    margin-right:20px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    transition: 0.1s linear;\r\n    background-image:url(${props => props.bgUrl});\r\n    @media screen and (max-width:768px){\r\n        width:100px;\r\n        height:170px;\r\n        margin-right:10px;\r\n        border-radius:2px;\r\n    }\r\n`\r\n\r\nconst Rating = styled.span`\r\n    font-size:15px;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    right: 25px;\r\n    opacity: 0;\r\n    transition: 0.1s linear;\r\n    `\r\n\r\nconst ImageContainer = styled.div`\r\nmargin-bottom: 5px;\r\nposition: relative;\r\n    &:hover{\r\n    ${ Image} {\r\n        opacity: 0.3;\r\n    }\r\n    ${ Rating} {\r\n        opacity: 1;\r\n    }\r\n}\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-size:18px;\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    overflow:hidden;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n    width:200px;\r\n    @media screen and (max-width:768px) {\r\n        font-size:15px;\r\n        width:100px;\r\n    }\r\n    `\r\n\r\nconst Year = styled.span`\r\n    font-size: 15px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n    `\r\n\r\nconst Poster = ({ id, imgUrl, title, rating, year, isMovie = false }) =>\r\n\r\n    <Link to={isMovie ? `/movie/${id}/` : `/show/${id}/`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : noneImage} />\r\n\r\n                <Rating>\r\n                    <span role='img' aria-label='rating' >\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 21 ? title.substring(0, 21) + '...' : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imgUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Error = styled.div`\r\nposition: relative;\r\nwidth:100%;\r\nheight:calc(100vh - 50px);\r\nh1 {\r\n    position: absolute;\r\n    width:100%;\r\n    top:50%;\r\n    left:50%;\r\n    transform:translate(-50%,-50%);\r\n    color: rgba(0, 0, 0, .3);\r\n    font-size: 5em;\r\n    text-align:center;\r\n}\r\nh1:before {\r\n    content: attr(data-text);\r\n    max-width:100%;\r\n    top:50%;\r\n    left:50%;\r\n    transform:translate(-50%,-50%);\r\n    position: absolute;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    color: #fff;\r\n    opacity:1;\r\n    animation: error 1.5s linear infinite alternate;\r\n}\r\n@keyframes error {\r\n    0% {\r\n        opacity:0;\r\n    }\r\n}\r\n@media screen and (max-width:768px){\r\n    h1{\r\n        font-size:2em;\r\n    }\r\n}\r\n`\r\n\r\nexport default ({ data }) => {\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        setTimeout(() => history.goBack(), 1500)\r\n        return () => clearTimeout(() => history.goBack(), 2000)\r\n    }, [history])\r\n    return (\r\n        <>\r\n            <Error ><br /><br />\r\n                <h1 data-text={data ? data + ' 2초 후 이동합니다.' : '서버 오류...2초 후 이동합니다.'}>{data ? data + ' 2초 후 이동합니다.' : '서버 오류...2초 후 이동합니다.'}</h1>\r\n            </Error >\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    margin-bottom:30px;\r\n    @media screen and (max-width:768px) {\r\n       margin:10px 0;\r\n    }\r\n`\r\nconst BackDrop = styled.div`\r\n    position:relative;\r\n    width:99%;\r\n    height:400px;\r\n    background:url(${props => props.url});\r\n    background-repeat:no-repeat;\r\n    background-size:cover;\r\n    background-position: top center;\r\n    margin:auto;\r\n    border-radius:5px;\r\n    @media screen and (max-width:768px) {\r\n        height:170px;\r\n    }\r\n`\r\nconst Data = styled.div`\r\n      position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    top:0%;\r\n    left:0%;\r\n    z-index:99;\r\n    div{\r\n        cursor:pointer;\r\n        color:white;\r\n        font-weight:500;\r\n        position:absolute;\r\n        top:50%;\r\n        left:50%;\r\n        transform:translate(-50%,-50%);\r\n        padding:7px 100px;\r\n        border-radius:10px;\r\n        font-size:50px;\r\n        background:rgba(0,0,0,0.5);\r\n        animation: headline 3s ease-in-out;\r\n        @keyframes headline {\r\n           0%{\r\n                opacity:0;\r\n                padding:7px 0;\r\n            }\r\n            85%{\r\n                padding:7px 100px\r\n            }\r\n        }\r\n    }\r\n    @media screen and (max-width:1450px) {\r\n        div{\r\n            padding:7px 5%;\r\n            font-size:32px;\r\n            min-width:65%;\r\n            max-width:80%;\r\n            text-align:center;\r\n            margin:auto;\r\n            @keyframes headline {\r\n           0%{\r\n                opacity:0;\r\n                padding:7px 0;\r\n            }\r\n            85%{\r\n                padding:7px 5%\r\n            }\r\n        }\r\n        }\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        div{\r\n            width:100%;\r\n            font-size:20px;\r\n            padding:5px;\r\n            border-radius:unset;\r\n            text-align:center;\r\n            animation:unset;\r\n            min-width:unset;\r\n            max-width:unset;\r\n        }\r\n    }\r\n   \r\n`\r\n\r\nconst PopularComponent = ({ id }) => {\r\n    return (\r\n        <Container>\r\n            <Link to='/movie/419704/'>\r\n                <BackDrop url={`https://image.tmdb.org/t/p/original/5BwqwxMEjeFtdknRV792Svo0K1v.jpg`} >\r\n                    <Data>\r\n                        <div>반갑습니다. Maflix!</div>\r\n                    </Data>\r\n                </BackDrop>\r\n            </Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PopularComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Section from '../../Components/Section'\r\nimport Loader from '../../Components/Loader'\r\nimport Poster from '../../Components/Poster'\r\nimport { Helmet } from 'react-helmet'\r\nimport Error from '../../Components/Error'\r\nimport PopularComponent from '../../Components/PopularComponent'\r\n\r\nconst Container = styled.div`\r\n    padding:50px 60px 70px;\r\n    @media screen and (max-width:768px) {\r\n        padding:5px\r\n    }\r\n`\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading, randomId }) => {\r\n    return (\r\n        loading ? <Loader /> : error ? <Error data={'No Data'} /> : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>\r\n                        영화 | Maflix\r\n                    </title>\r\n                </Helmet>\r\n                <PopularComponent id={popular[randomId].id} />\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section section={'/movie/sub/now/'} title={'현재 상영중'}>{nowPlaying.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.title} rating={i.vote_average} year={i.release_date && i.release_date.substring(0, 4)} isMovie={true} />)}</Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section section={'/movie/sub/up/'} title={'개봉 예정'}>{upcoming.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.title} rating={i.vote_average} year={i.release_date && i.release_date.substring(4)} isMovie={true} />)}</Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section section={'/movie/sub/popmovie/'} title={'훙행순'}>{popular.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.title} rating={i.vote_average} year={i.release_date && i.release_date.substring(4)} isMovie={true} />)}</Section>\r\n                )}\r\n                {error && <Error color='#e74c3c' data={'No data'} />}\r\n            </Container>\r\n        ))\r\n}\r\n\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default HomePresenter","import axios from 'axios'\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: process.env.REACT_APP_APIKey,\r\n        language: \"ko-KR\"\r\n        // en-US''\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: (id) => api.get('movie/now_playing', { params: { page: id } }),\r\n    upcoming: (id) => api.get('movie/upcoming', { params: { page: id } }),\r\n    popular: (id) => api.get('movie/popular', { params: { page: id } }),\r\n    movieRecommendations: (id) => api.get(`movie/${id}/recommendations`),\r\n    movieCredits: id => api.get(`movie/${id}/credits`),\r\n    movieLatest: () => api.get('discover/movie'),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos,images\"\r\n        }\r\n    }),\r\n    search: (term, page) => api.get('search/movie', {\r\n        params: {\r\n            query: encodeURIComponent(term),\r\n            page\r\n        }\r\n    }),\r\n    castPeople: id => api.get(`/person/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos,images\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: (id) => api.get('tv/top_rated', { params: { page: id } }),\r\n    popular: (id) => api.get('tv/popular', { params: { page: id } }),\r\n    airingToday: (id) => api.get('tv/airing_today', { params: { page: id } }),\r\n    tvRecommendations: (id) => api.get(`tv/${id}/recommendations`),\r\n    tvImdb: (id) => api.get(`tv/${id}/external_ids`),\r\n    tvCredits: id => api.get(`tv/${id}/credits`),\r\n    tvSeasons: (id, season) => api.get(`tv/${id}/season/${season}`),\r\n    tvDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos,images\"\r\n        }\r\n    }),\r\n    search: (term, page) => api.get(`search/tv`, {\r\n        params: {\r\n            query: encodeURIComponent(term),\r\n            page\r\n        }\r\n    })\r\n}\r\n","import HomeContainer from './HomeContainer'\r\n\r\nexport default HomeContainer","import React from 'react'\r\nimport HomePresenter from './HomePresenter'\r\nimport { moviesApi } from '../../api'\r\n\r\nexport default class HomeContainer extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true,\r\n        randomId: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying()\r\n            const { data: { results: upcoming } } = await moviesApi.upcoming()\r\n            const { data: { results: popular } } = await moviesApi.popular()\r\n            if (popular && popular.length > 0) {\r\n                const random = Math.floor(Math.random() * popular.length)\r\n                this.setState({ nowPlaying, upcoming, popular, randomId: random })\r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: \"Can't find movie information.\" })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading, randomId } = this.state\r\n\r\n        return (\r\n            <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} randomId={randomId} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    margin-bottom:30px;\r\n    @media screen and (max-width:768px) {\r\n       margin:10px 0;\r\n    }\r\n`\r\nconst BackDrop = styled.div`\r\n    position:relative;\r\n    width:99%;\r\n    height:400px;\r\n    background:url(${props => props.url});\r\n    background-repeat:no-repeat;\r\n    background-size:cover;\r\n    background-position: center center;\r\n    margin:auto;\r\n    border-radius:5px;\r\n    @media screen and (max-width:768px) {\r\n        height:170px;\r\n    }\r\n`\r\nconst Data = styled.div`\r\n      position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    top:0%;\r\n    left:0%;\r\n    z-index:99;\r\n    div{\r\n        cursor:pointer;\r\n        color:white;\r\n        font-weight:500;\r\n        position:absolute;\r\n        top:50%;\r\n        left:50%;\r\n        transform:translate(-50%,-50%);\r\n        padding:7px 100px;\r\n        border-radius:10px;\r\n        font-size:50px;\r\n        background:rgba(0,0,0,0.5);\r\n        animation: headline 3s ease-in-out;\r\n        @keyframes headline {\r\n           0%{\r\n                opacity:0;\r\n                padding:7px 0;\r\n            }\r\n            85%{\r\n                padding:7px 100px\r\n            }\r\n        }\r\n    }\r\n    @media screen and (max-width:1450px) {\r\n        div{\r\n            padding:7px 5%;\r\n            font-size:32px;\r\n            min-width:65%;\r\n            max-width:80%;\r\n            text-align:center;\r\n            margin:auto;\r\n            @keyframes headline {\r\n           0%{\r\n                opacity:0;\r\n                padding:7px 0;\r\n            }\r\n            85%{\r\n                padding:7px 5%\r\n            }\r\n        }\r\n        }\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        div{\r\n            width:100%;\r\n            font-size:20px;\r\n            padding:5px;\r\n            border-radius:unset;\r\n            text-align:center;\r\n            animation:unset;\r\n            min-width:unset;\r\n            max-width:unset;\r\n        }\r\n    }\r\n   \r\n`\r\n\r\nconst TvComponent = () => {\r\n    return (\r\n        <Container>\r\n            <Link to='/show/2304/'>\r\n                <BackDrop url={`https://image.tmdb.org/t/p/original/wIe1HL7oMNwyltsqqx2sCPwNl4w.jpg`} >\r\n                    <Data>\r\n                        <div>토마스 알아요?</div>\r\n                    </Data>\r\n                </BackDrop>\r\n            </Link>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TvComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Section from '../../Components/Section'\r\nimport Loader from '../../Components/Loader'\r\nimport Poster from '../../Components/Poster'\r\nimport { Helmet } from 'react-helmet'\r\nimport Error from '../../Components/Error'\r\nimport TvComponent from '../../Components/TvComponent'\r\n\r\nconst Container = styled.div`\r\n    padding:50px 60px 70px;\r\n    @media screen and (max-width:768px) {\r\n        padding:5px;\r\n    }\r\n`\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => loading ? <Loader /> : error ? <Error data={'No Data'} /> : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>\r\n                TV 프로그램 | Maflix\r\n            </title>\r\n        </Helmet>\r\n        <TvComponent />\r\n        {topRated && topRated.length > 0 && (\r\n            <Section section={'/show/sub/top/'} title={'평점순'}>{topRated.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.name} rating={i.vote_average} year={i.first_air_date && i.first_air_date.substring(0, 4)} isMovie={false} />)}</Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n            <Section section={'/show/sub/popshow/'} title={'흥행순'}>{popular.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.name} rating={i.vote_average} year={i.first_air_date && i.first_air_date.substring(0, 4)} isMovie={false} />)}</Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n            <Section section={'/show/sub/air/'} title={'현재 방영중'}>{airingToday.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.name} rating={i.vote_average} year={i.first_air_date && i.first_air_date.substring(0, 4)} isMovie={false} />)}</Section>\r\n        )}\r\n        {error && <Error color='#e74c3c' data={'No Data'} />}\r\n    </Container>\r\n)\r\n\r\n\r\n\r\n\r\nTVPresenter.propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array\r\n}\r\n\r\nexport default TVPresenter","import TVContainer from './TVContainer'\r\n\r\nexport default TVContainer","import React, { Component } from 'react'\r\nimport TVPresenter from './TVPresenter'\r\nimport { tvApi } from '../../api'\r\n\r\nexport default class TVContainer extends Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            const { data: { results: topRated } } = await tvApi.topRated()\r\n            const { data: { results: popular } } = await tvApi.popular()\r\n            const { data: { results: airingToday } } = await tvApi.airingToday()\r\n            this.setState({ topRated, popular, airingToday })\r\n        } catch (error) {\r\n            this.setState({ error: \"Can't find Show information.\" })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state\r\n        return (\r\n            <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Error = styled.div`\r\nposition: relative;\r\nwidth:100%;\r\nheight:100%;\r\nh1 {\r\n    position: absolute;\r\n    width:100%;\r\n    height:100%;\r\n    top:50%;\r\n    left:50%;\r\n    transform:translate(-50%,-50%);\r\n    color: rgba(255,255,255,0.5);\r\n    font-size: 2em;\r\n    text-align:center;\r\n    opacity:1;\r\n    line-height:2.1em;\r\n}\r\n\r\n@keyframes error {\r\n    0% {\r\n        opacity:0;\r\n    }\r\n}\r\n@media screen and (max-width:768px){\r\n    h1{\r\n        font-size:2em;\r\n    }\r\n}\r\n`\r\n\r\nexport default ({ data }) => {\r\n    return (\r\n        <>\r\n            <Error ><br /><br />\r\n                <h1 data-text={data}>{data}</h1>\r\n            </Error >\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Section from '../../Components/Section'\r\nimport Loader from '../../Components/Loader'\r\nimport Poster from '../../Components/Poster'\r\nimport { Helmet } from 'react-helmet'\r\nimport Error from '../../Components/Error'\r\nimport Message from '../../Components/Message'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    padding:50px 60px 70px;\r\n    height:calc(100vh - 50px);\r\n    h1{\r\n        font-size:18px;\r\n        padding-left:10px;\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        padding:5px\r\n    }\r\n`\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    @media screen and (max-width:768px) {\r\n        margin-bottom:20px;\r\n    }\r\n`\r\nconst Input = styled.input`\r\n    all:unset;\r\n    width:100%;\r\n    padding:5px 0;\r\n    font-size:28px;\r\n    background:rgba(255,255,255,0.1);\r\n    line-height:28px;\r\n    text-indent:15px;\r\n    @media screen and (max-width:768px) {\r\n        font-size:22px;\r\n        line-height:25px;\r\n        margin-top:10px;\r\n        text-indent:15px;\r\n    }\r\n`\r\n\r\nconst SearchPresenter = ({ loading, error, searchTerm, searchResult, movieResult, tvResult, onSubmit, onChange }) => {\r\n    const history = useHistory()\r\n    const term = history.location.pathname.split('/')[2]\r\n    return (loading ? <Loader /> : error ? <Error data={'Error!'} /> :\r\n        < Container >\r\n            <Helmet>\r\n                <title>\r\n                    검색 | Maflix\r\n                </title>\r\n            </Helmet>\r\n            <Form onSubmit={onSubmit} >\r\n                <Input onChange={onChange} value={searchTerm} placeholder='영어 검색만 지원합니다.' />\r\n            </Form>\r\n            {loading ? <Loader /> : <>\r\n                {movieResult && movieResult.length > 0 && (<Section section={`/movie/sub/search/${term}/`} title={'영화 검색 결과'}>{movieResult.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.original_title} rating={i.vote_average} year={i.release_date && i.release_date.substring(0, 4)} isMovie={true} />)}</Section>)}\r\n                {tvResult && tvResult.length > 0 && (<Section section={`/show/sub/search/${term}/`} title={'TV 검색 결과'}>{tvResult.map(i => <Poster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.original_name} rating={i.vote_average} year={i.first_air_date && i.first_air_date.substring(0, 4)} isMovie={false} />)}</Section>)}\r\n                {error && <Error data={'No Data'} />}\r\n                {movieResult && tvResult && movieResult.length === 0 && tvResult.length === 0 && (<Message data={`Nothing found for : ${searchResult}`} />)}\r\n            </>\r\n            }\r\n        </Container >)\r\n}\r\n\r\n\r\n\r\n\r\nSearchPresenter.propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    movieResult: PropTypes.array,\r\n    tvResult: PropTypes.array,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nexport default SearchPresenter\r\n\r\n\r\n","import SearchContainer from './SearchContainer'\r\n\r\nexport default SearchContainer","import React, { useState, useEffect } from 'react'\r\nimport SearchPresenter from './SearchPresenter'\r\nimport { moviesApi, tvApi } from '../../api'\r\n\r\nconst SearchContainer = (props) => {\r\n    const { match: { params: { term } } } = props\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        error: null,\r\n        movieResult: null,\r\n        tvResult: null,\r\n    })\r\n    const [change, setChange] = useState(term)\r\n    const [termResult, setTermResult] = useState(term)\r\n    const { loading, error, movieResult, tvResult } = state\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (change !== '') {\r\n            props.history.push(`/search/${change}/`)\r\n            setChange('')\r\n        }\r\n        if (change === '') {\r\n            props.history.push('/search/')\r\n            setChange('')\r\n        }\r\n    }\r\n    const updateTerm = (e) => {\r\n        e.preventDefault()\r\n        setChange(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getData = async (term) => {\r\n            setState({ loading: true })\r\n            try {\r\n                if (term) {\r\n                    const { data: { results: movieResult } } = await moviesApi.search(term)\r\n                    const { data: { results: tvResult } } = await tvApi.search(term)\r\n                    setState(prev => ({ ...prev, movieResult, tvResult, searchResult: term, loading: false }))\r\n                }\r\n                setState(prev => ({ ...prev, loading: false }))\r\n            } catch (error) {\r\n                setState(prev => ({ ...prev, error: \"Can't find results.\", loading: false }))\r\n            }\r\n        }\r\n        if (!term) {\r\n            setChange('')\r\n            setTermResult('')\r\n            setState(prev => ({\r\n                ...prev,\r\n                loading: false,\r\n                error: null,\r\n                movieResult: null,\r\n                tvResult: null,\r\n            }))\r\n        }\r\n        if (term) {\r\n            setChange(term)\r\n            setTermResult(term)\r\n            getData(term)\r\n        }\r\n    }, [term])\r\n\r\n\r\n    return (\r\n        <SearchPresenter onSubmit={handleSubmit} onChange={updateTerm} searchResult={termResult} loading={loading} error={error} searchTerm={change} movieResult={movieResult} tvResult={tvResult} />\r\n    )\r\n}\r\n\r\nexport default SearchContainer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.div`\r\n    &:not(:last-child){\r\n    margin-bottom: 50px;\r\n\r\n}\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight:600;\r\n`\r\n\r\nconst Grid = styled.div`\r\n    margin-top:10px;\r\n    display:flex;   \r\n    overflow: auto;\r\n    -ms-overflow-style: none;\r\n    &::-webkit-scrollbar {\r\n        background:rgba(0,0,0,0.1)\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(255,255,255,0.5);\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        width:100%;\r\n        margin-top:10px;\r\n        display:flex;\r\n        overflow-x:auto\r\n}\r\n`\r\n\r\nconst Cast = ({ title, children }) => {\r\n    return (\r\n        <Container>\r\n            <Title>{title}</Title>\r\n            <Grid>{children}</Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nCast.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.any\r\n}\r\n\r\nexport default Cast","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport noneImage from '../assets/none-png-2.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n    a{\r\n        color:inherit;\r\n        text-decoration:none;\r\n        font-size:inherit;\r\n        font:inherit\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    height:70px;\r\n    width:80px;\r\n    margin:0 5px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    transition: 0.1s linear;\r\n    background-image:url(${props => props.bgUrl});\r\n    @media screen and (max-width:768px){\r\n        width: 70px;\r\n        height:80px;\r\n        margin:0 2px;\r\n        border-radius:2px;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n        margin-bottom: 5px;\r\n        position: relative;\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-weight:700;\r\n    text-align:center;\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    overflow:hidden;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n    `\r\nconst Title1 = styled.span`\r\ntext-align:center;\r\ndisplay: block;\r\nmargin-bottom: 3px;\r\noverflow:hidden;\r\ntext-overflow:ellipsis;\r\nwhite-space:nowrap;\r\n`\r\nconst CastProfile = ({ id, imgUrl, title, char }) => {\r\n    return (\r\n        <Container>\r\n            <Link to={`/person/${id}/`}>\r\n                <ImageContainer>\r\n                    <Image bgUrl={imgUrl && imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : noneImage} />\r\n                </ImageContainer>\r\n                <Title>{title && title.length > 10 ? title.substring(0, 10) + '...' : title}</Title>\r\n                <Title1>{char && char.length > 10 ? char.substring(0, 10) + '...' : char}</Title1>\r\n            </Link>\r\n        </Container>)\r\n}\r\n\r\nCastProfile.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imgUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default CastProfile","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport noneImage from '../../../assets/none-png-2.png'\r\nimport { tvApi, moviesApi } from '../../../api'\r\n\r\nconst Root = styled.div`\r\n    border-radius:0 0 5px 5px;\r\n    width:100%;\r\n    background:rgba(255,255,255,0.2);\r\n    animation:0.5s all;\r\n    overflow: auto;\r\n        -ms-overflow-style: none;\r\n        &::-webkit-scrollbar {\r\n            background:rgba(0,0,0,0.1)\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255,255,255,0.5);\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        background:rgba(255,255,255,0.2)\r\n    }\r\n    animation:loadRoot1 1s ease-in-out ;\r\n    max-height:200px;\r\n    @keyframes loadRoot1 {\r\n        0%{\r\n            max-height:0px;\r\n        }\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    text-align:center;\r\n    margin:10px;\r\n    font-size:20px;\r\n    display:flex;\r\n    align-items:center;\r\n    @media screen and (max-width:768px) {\r\n        font-size:16px;\r\n    }\r\n    \r\n    \r\n`\r\nconst Image = styled.img`\r\n    display:block;\r\n    width:30px;\r\n    height:30px;\r\n    margin-right:15px;\r\n`\r\n\r\nconst Company = (props) => {\r\n    const { match: { params: { id, type } } } = props\r\n    const parsedId = parseInt(id)\r\n    const [state, setState] = useState({ loading: true, error: null, result: null })\r\n\r\n    useEffect(() => {\r\n        const getPerson = async () => {\r\n            try {\r\n                if (!isNaN(parsedId) && type === 'movie') {\r\n                    const { data: { production_companies: result } } = await moviesApi.movieDetail(parsedId)\r\n                    setState(prev => { return { ...prev, result, loading: false } })\r\n                }\r\n                if (!isNaN(parsedId) && type === 'show') {\r\n                    const { data: { production_companies: result } } = await tvApi.tvDetail(parsedId)\r\n                    setState(prev => { return { ...prev, result, loading: false } })\r\n                }\r\n            }\r\n            catch (error) {\r\n                setState(prev => { return { ...prev, error, loading: false } })\r\n            }\r\n        }\r\n        getPerson()\r\n    }, [parsedId, type])\r\n    const { loading, error, result } = state\r\n    return (\r\n        loading ? null : error ? null : result &&\r\n            <Root>\r\n                {result && result.map((i, index) =>\r\n                    <Container key={index}>\r\n                        <Image src={i.logo_path ? `https://image.tmdb.org/t/p/original/${i.logo_path}` : noneImage} />\r\n                        {i.name}\r\n                    </Container>)}\r\n            </Root>\r\n    )\r\n}\r\n\r\nexport default Company\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport noneImage from '../../../assets/none-png-2.png'\r\nimport { moviesApi, tvApi } from '../../../api'\r\n\r\nconst Root = styled.div`\r\n    border-radius:0 0 5px 5px;\r\n    width:100%;\r\n    background:rgba(255,255,255,0.2);\r\n    overflow: auto;\r\n        -ms-overflow-style: none;\r\n        &::-webkit-scrollbar {\r\n            background:rgba(0,0,0,0.1)\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255,255,255,0.5);\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        background:rgba(255,255,255,0.2);\r\n    }\r\n    animation:loadRoot 1s ease-in-out;\r\n    max-height:200px;\r\n    @keyframes loadRoot {\r\n        0%{\r\n            max-height:0px;\r\n        }\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    text-align:center;\r\n    margin:10px;\r\n    font-size:20px;\r\n    display:flex;\r\n    align-items:center;\r\n    @media screen and (max-width:768px) {\r\n        font-size:16px;\r\n    }\r\n    \r\n    \r\n`\r\nconst Image = styled.img`\r\n    display:block;\r\n    width:30px;\r\n    height:30px;\r\n    margin-right:15px;\r\n`\r\nconst USS = styled.span`\r\n    width:30px;\r\n    color:pink;\r\n    margin-right:8px;\r\n`\r\n\r\nconst Country = (props) => {\r\n    const { match: { params: { id, type } } } = props\r\n    const parsedId = parseInt(id)\r\n    const [state, setState] = useState({ loading: true, error: null, result: null, network: null })\r\n\r\n    useEffect(() => {\r\n        const getCountry = async () => {\r\n            try {\r\n                if (!isNaN(parsedId) && type === 'movie') {\r\n                    const { data: { production_countries: result } } = await moviesApi.movieDetail(parsedId)\r\n                    setState(prev => { return { ...prev, result, loading: false } })\r\n                }\r\n                if (!isNaN(parsedId) && type === 'show') {\r\n                    const { data: { networks: network } } = await tvApi.tvDetail(parsedId)\r\n                    setState(prev => { return { ...prev, network, loading: false } })\r\n                }\r\n            }\r\n            catch (error) {\r\n                setState(prev => { return { ...prev, error, loading: false } })\r\n            }\r\n        }\r\n        getCountry()\r\n    }, [parsedId, type])\r\n    const { loading, error, result, network } = state\r\n    return (\r\n        loading ? null : error ? null :\r\n            result ?\r\n                (<Root>\r\n                    {result && result.map((i, index) =>\r\n                        <Container key={index}>\r\n                            <USS>{i.iso_3166_1}</USS>\r\n                            {i.name}\r\n                        </Container>)}\r\n                </Root>)\r\n                : network ?\r\n                    (<Root>\r\n                        {network && network.map((i, index) =>\r\n                            <Container key={index}>\r\n                                <Image src={i.logo_path ? `https://image.tmdb.org/t/p/original/${i.logo_path}` : noneImage} />\r\n                                {i.name}\r\n                            </Container>)}\r\n                    </Root>)\r\n                    : null\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport noneImage from '../assets/none-png-2.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n    a{\r\n        color:inherit;\r\n        text-decoration:none;\r\n        font-size:inherit;\r\n        font:inherit\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    height:250px;\r\n    width:200px;\r\n    margin:0 5px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    transition: 0.1s linear;\r\n    background-image:url(${props => props.bgUrl});\r\n    @media screen and (max-width:768px){\r\n        height:100px;\r\n        width:70px;\r\n        margin:0 2px;\r\n        border-radius:2px;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n        margin-bottom: 5px;\r\n        position: relative;\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-weight:700;\r\n    text-align:center;\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    overflow:hidden;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n    @media screen and (max-width:768px) {\r\n        margin:auto;\r\n        width:69px;\r\n    }\r\n    `\r\nconst Season = ({ imgUrl, title, season, id }) => {\r\n    return (\r\n        <Container>\r\n            <Link to={{ pathname: `/tv/${id}/seasons/${season}/${title}/` }}>\r\n                <ImageContainer>\r\n                    <Image bgUrl={imgUrl && imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : noneImage} />\r\n                </ImageContainer>\r\n                <Title>{title && title.length > 10 ? title.substring(0, 10) + '...' : title}</Title>\r\n            </Link>\r\n        </Container>)\r\n}\r\n\r\nSeason.propTypes = {\r\n    imgUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Season","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport noneImage from '../assets/none-png-2.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n    a{\r\n        color:inherit;\r\n        text-decoration:none;\r\n        font-size:inherit;\r\n        font:inherit\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    height:250px;\r\n    width:160px;\r\n    margin:0 5px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    transition: 0.1s linear;\r\n    background-image:url(${props => props.bgUrl});\r\n    @media screen and (max-width:768px){\r\n        height:100px;\r\n        width:70px;\r\n        margin:0 2px;\r\n        border-radius:2px;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n        margin-bottom: 5px;\r\n        position: relative;\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-weight:700;\r\n    text-align:center;\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    overflow:hidden;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n    @media screen and (max-width:768px) {\r\n        margin:auto;\r\n        width:69px;\r\n    }\r\n    `\r\nconst Recommendations = ({ id, imgUrl, title, isMovie }) => {\r\n    return (\r\n        id && imgUrl && title &&\r\n        <Link to={isMovie === true ? `/movie/${id}/` : isMovie === false ? `/show/${id}/` : '/error/'}>\r\n            <Container>\r\n                <ImageContainer>\r\n                    <Image bgUrl={imgUrl && imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : noneImage} />\r\n                </ImageContainer>\r\n                <Title>{title && title.length > 10 ? title.substring(0, 10) + '...' : title}</Title>\r\n            </Container>\r\n        </Link>)\r\n}\r\n\r\nexport default Recommendations","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Loader from '../../Components/Loader'\r\nimport noneImage from '../../assets/none-png-2.png'\r\nimport { Helmet } from 'react-helmet'\r\nimport Cast from '../../Components/Cast'\r\nimport CastProfile from '../../Components/CastProfile'\r\nimport { Route, NavLink, Redirect } from 'react-router-dom'\r\nimport Company from './Company/Company'\r\nimport Country from './Country/Country'\r\nimport Error from '../../Components/Error'\r\nimport Season from '../../Components/Season'\r\nimport Recommendations from '../../Components/Recommendations'\r\n\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding:70px;\r\n    @media screen and (max-width:768px) {\r\n        padding:0;\r\n    }\r\n`\r\nconst Backdrop = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:calc(100vh - 50px);\r\n    background-image:url(${props => props.imgBg});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    filter:blur(3px);\r\n    opacity:0.5;\r\n    @media screen and (max-width:768px) {\r\n        display:none;\r\n    }\r\n`\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    width: 100%;\r\n    position:relative;\r\n    z-index:1;\r\n    height:100%;\r\n    border-radius:5px;\r\n    @media screen and (max-width:768px) {\r\n        flex-direction:column;\r\n        position: relative;\r\n        width:100%;\r\n    }\r\n`\r\n\r\nconst Cover = styled.div`\r\n    border-radius:5px;\r\n    min-width:30%;\r\n    margin-right:20px;\r\n    background-image:url(${props => props.imgBg});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    height:100%;\r\n    z-index:0;\r\n    @media screen and (max-width:768px) {\r\n        width:100%;\r\n        margin:auto;\r\n        z-index:-1;\r\n        top:0;\r\n        left:0;\r\n        position:fixed;\r\n        height:calc(100vh);\r\n        z-index:-1;\r\n        opacity:0.3\r\n    }\r\n`\r\n\r\nconst Data = styled.div`\r\n    width:65%;\r\n    height:100%;\r\n    overflow: auto;\r\n        -ms-overflow-style: none;\r\n        &::-webkit-scrollbar {\r\n            background:rgba(0,0,0,0.1)\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255,255,255,0.5);\r\n    }\r\n    margin-left:10px;\r\n    @media screen and (max-width:768px) {\r\n        padding-top:5%;\r\n        width:90%;\r\n        margin-left:0;\r\n        margin:0 auto;\r\n        overflow:unset;\r\n    }\r\n`\r\n\r\nconst Title = styled.h3`\r\n    font-size:32px;\r\n    @media screen and (max-width:768px) {\r\n       font-size:18px;\r\n       color:yellow;\r\n    }\r\n`\r\n\r\nconst ItemContainer = styled.div`\r\n    margin:20px 0;\r\n    @media screen and (max-width:768px) {\r\n        width:90%;\r\n       margin:15px 0 10px;\r\n       overflow:hidden;\r\n       text-overflow:ellipsis;\r\n       white-space:nowrap;\r\n    }\r\n`\r\n\r\nconst Item = styled.span`\r\n\r\n`\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n    @media screen and (max-width:768px) {\r\n       margin:0 5px;\r\n    }\r\n`\r\n\r\nconst Overview = styled.p`\r\n    font-size:18px;\r\n    padding:5px 0 5px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:95%;\r\n    @media screen and (max-width:768px) {\r\n       width:100%;\r\n       font-size:14px;\r\n    }\r\n\r\n`\r\nconst IMDb = styled.span`\r\n    font-size:18px;\r\n    font-weight:700;\r\n    margin-left:10px;\r\n    padding:0 6px;\r\n    text-align:center;\r\n    vertical-align:center;\r\n    border-radius:4px;\r\n    color:black;\r\n    background:#F5C518;\r\n    @media screen and (max-width:768px){\r\n        font-size:16px;\r\n    }\r\n`\r\nconst CastContainer = styled.div`\r\n    padding:10px 0;\r\n    margin:auto;\r\n`\r\nconst VideoContainer = styled.iframe`\r\n    position: relative;\r\n    :first-child{\r\n        margin-right:5px;\r\n    }\r\n    :not(:first-child){\r\n    margin:0 5px; \r\n    }\r\n    border-radius:5px;\r\n    width:400px;\r\n    height:170px;\r\n    @media screen and (max-width:768px) {\r\n        width:100%;\r\n    }\r\n`\r\n\r\nconst Media = styled.div`\r\n    padding:10px 0;\r\n    margin:auto;\r\n    div{\r\n        position:relative;\r\n        display:flex;    \r\n        overflow: auto;\r\n        -ms-overflow-style: none;\r\n        &::-webkit-scrollbar {\r\n            background:rgba(0,0,0,0.1)\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255,255,255,0.5);\r\n    }}\r\n    p{\r\n        padding:0 0 10px;\r\n        font-size:14px;\r\n        font-weight:600\r\n    }\r\n`\r\nconst ButtonContainer = styled.form`\r\n    font-size:17px;\r\n    color:white;\r\n    width:100%;\r\n    margin:auto;\r\n    display:flex;\r\n    @media screen and (max-width:768px){\r\n    padding:5px 0 0;\r\n    }\r\n`\r\nconst ButtonLink = styled(NavLink)`\r\n    padding:10px 10px;\r\n    text-decoration:none;\r\n    font-weight:600;\r\n    font-size:20px;\r\n    color:white;\r\n    text-align:center;\r\n    display:block;\r\n    transition:0.2s linear;\r\n    border-radius:10px 10px 0 0;\r\n    &:hover{\r\n        color:red;\r\n        border-bottom:3px solid yellow\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        font-size:16px;\r\n\r\n    }\r\n`\r\nconst Foot = styled.div`\r\n    display:none;\r\n    @media screen and (max-width:768px) {\r\n        display:block;\r\n       height:20px;\r\n    }\r\n`\r\n\r\nconst DetailPresenter = ({ imdb_id, credits, result, error, loading, recommendations, type }) => {\r\n    return (\r\n        loading ? <Loader /> : error ? <Error data={'No Detail Data'} /> :\r\n            <Container>\r\n                <Helmet>\r\n                    <title>\r\n                        {result.title ? result.title : result.name} | Maflix\r\n                    </title>\r\n                </Helmet>\r\n                <Backdrop imgBg={result.backdrop_path ? `https://image.tmdb.org/t/p/w500${result.backdrop_path}` : null} />\r\n                <Content>\r\n                    <Cover imgBg={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : noneImage} />\r\n                    <Data>\r\n                        <Title>\r\n                            {result.title ? result.title : result.name}\r\n                            <IMDb>\r\n                                {result.imdb_id ? <a href={`https://www.imdb.com/title/${result.imdb_id}`} rel='noopener noreferrer' target='_blank'>IMDB</a> : <a href={`https://www.imdb.com/title/${imdb_id}`} rel='noopener noreferrer' target='_blank'>IMDB</a>}\r\n                            </IMDb>\r\n                        </Title>\r\n                        <ItemContainer>\r\n                            <Item>{result.vote_average ? '⭐' + result.vote_average : null}</Item>\r\n                            <Divider>▪</Divider>\r\n                            <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\r\n                            <Divider>▪</Divider>\r\n                            <Item>{result.runtime ? result.runtime : result.episode_run_time ? result.episode_run_time[0] : null} 분</Item>\r\n                            <Divider>▪</Divider>\r\n                            <Item>{result.genres && result.genres.map((i, index) => index === result.genres.length - 1 ? i.name : `${i.name} / `)}</Item>\r\n                        </ItemContainer>\r\n                        <Overview>\r\n                            {result.overview && result.overview.length > 0 && result.overview}\r\n                        </Overview>\r\n                        {credits && credits.length > 0 &&\r\n                            <CastContainer>\r\n                                <Cast title={'캐스팅'}>{credits.map(i => <CastProfile char={i.character} key={i.id} id={i.id} imgUrl={i.profile_path} title={i.name} />)}</Cast>\r\n                            </CastContainer>}\r\n                        {result && result.videos.results.length > 0 &&\r\n                            <Media>\r\n                                <p>트레일러</p>\r\n                                <div>\r\n                                    {result.videos.results.map(i =>\r\n                                        i.site === 'YouTube' ?\r\n                                            <VideoContainer\r\n                                                id={i.id}\r\n                                                key={i.id}\r\n                                                title={i.id}\r\n                                                src={`https://www.youtube.com/embed/${i.key}`}\r\n                                                allowFullScreen='allowFullScreen'\r\n                                                frameBorder='0'\r\n                                            >\r\n                                            </VideoContainer> : null)}\r\n                                </div>\r\n                            </Media>}\r\n                        {type === \"show\" && result && result.seasons && result.seasons.length > 0 && (\r\n                            <CastContainer>\r\n                                <Cast title={'시즌'}>{result.seasons.map(i => <Season season={i.season_number} key={i.id} id={result.id} imgUrl={i.poster_path} title={result.name} />)}</Cast>\r\n                            </CastContainer>)}\r\n                        {recommendations && recommendations.results && recommendations.results.length > 0 && (\r\n                            <CastContainer>\r\n                                <Cast title={'추천작'}>{recommendations.results.map(i => <Recommendations isMovie={type === 'movie' ? true : false} key={i.id} id={i.id} imgUrl={i.poster_path} title={i.name ? i.name : i.title} />)}</Cast>\r\n                            </CastContainer>)}\r\n                        <ButtonContainer>\r\n                            <ButtonLink to={{ pathname: type === 'movie' ? `/movie/${result.id}/company/` : `/show/${result.id}/company/` }}\r\n                                activeStyle={{\r\n                                    background: \"rgba(255,255,255,0.2)\",\r\n                                    color: \"#F5C518\",\r\n                                    borderBottom: '3px solid #F5C518'\r\n                                }}>제작</ButtonLink>\r\n                            {type === 'movie' ?\r\n                                <ButtonLink to={{ pathname: `/movie/${result.id}/country/` }}\r\n                                    activeStyle={{\r\n                                        background: \"rgba(255,255,255,0.2)\",\r\n                                        color: \"#F5C518\",\r\n                                        borderBottom: '3px solid #F5C518'\r\n                                    }} >국적</ButtonLink>\r\n                                : type === 'show' ?\r\n                                    <ButtonLink to={{ pathname: `/show/${result.id}/country/` }}\r\n                                        activeStyle={{\r\n                                            background: \"rgba(255,255,255,0.2)\",\r\n                                            color: \"#F5C518\",\r\n                                            borderBottom: '3px solid #F5C518'\r\n                                        }} >방영</ButtonLink> : null\r\n                            }\r\n\r\n                        </ButtonContainer>\r\n                        <Route path={`/:type/:id/company/`} exact component={Company} />\r\n                        <Route path={`/:type/:id/country/`} exact component={Country} />\r\n                        <Redirect from={'*'} to={{ pathname: type === 'movie' ? `/movie/${result.id}/company/` : type === 'show' ? `/show/${result.id}/company/` : '/error' }} />\r\n                        <Foot></Foot>\r\n                    </Data>\r\n                </Content>\r\n            </Container >\r\n    )\r\n}\r\n\r\nDetailPresenter.propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    result: PropTypes.object\r\n}\r\n\r\nexport default DetailPresenter","import DetailContainer from './DetailContainer'\r\n\r\nexport default DetailContainer","import React, { Component } from 'react'\r\nimport DetailPresenter from './DetailPresenter'\r\nimport { moviesApi, tvApi } from '../../api'\r\n\r\nexport default class DetailContainer extends Component {\r\n    state = {\r\n        result: null,\r\n        credits: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n\r\n    async getData(parsedId, type, push) {\r\n        try {\r\n            if (!isNaN(parsedId) && type === 'movie') {\r\n                const { data: result } = await moviesApi.movieDetail(parsedId)\r\n                const { data: { cast: credits } } = await moviesApi.movieCredits(parsedId)\r\n                const { data: recommendations } = await moviesApi.movieRecommendations(parsedId)\r\n                return this.setState({ result, credits, recommendations, type })\r\n            }\r\n            if (!isNaN(parsedId) && type === 'show') {\r\n                const { data: result } = await tvApi.tvDetail(parsedId)\r\n                const { data: { cast: credits } } = await tvApi.tvCredits(parsedId)\r\n                const { data: { imdb_id } } = await tvApi.tvImdb(parsedId)\r\n                const { data: recommendations } = await tvApi.tvRecommendations(parsedId)\r\n                return this.setState({ result, credits, imdb_id, recommendations, type })\r\n            }\r\n            return push('/')\r\n        } catch (error) {\r\n            this.setState({ error: 'error!' })\r\n            return push('/')\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: { params: { id, type } }, history: { push } } = this.props\r\n        const parsedId = parseInt(id)\r\n        this.getData(parsedId, type, push)\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { match: { params: { id: prevId, type: prevType } } } = prevProps\r\n        const { match: { params: { id, type } }, history: { push } } = this.props\r\n        if (prevId !== id || prevType !== type) {\r\n            const parsedId = parseInt(id)\r\n            this.getData(parsedId, type, push)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, credits, imdb_id, error, loading, recommendations, type } = this.state\r\n        return (\r\n            <DetailPresenter type={type} imdb_id={imdb_id} result={result} error={error} loading={loading} credits={credits} recommendations={recommendations} />\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\nimport logo from '../assets/logo.png'\r\nimport { FaExternalLinkAlt } from 'react-icons/fa'\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position:fixed;\r\n    transition:0.5s;\r\n    top:${props => props.state ? '50px' : 0};\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index:9999;\r\n    box-shadow:0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n    p{\r\n        color:#fff;\r\n        font-weight:600;\r\n        font-size:20px;\r\n        line-height:50px;\r\n        text-align:right;\r\n        margin:auto;\r\n        position:fixed;\r\n        opacity:0;\r\n        top:${props => props.state ? '50px' : 0};\r\n        transition:0.5s;\r\n        left:50%;\r\n        transform:translateX(-50%);\r\n        animation: loading1 15s ease-in-out ;\r\n        &:before {\r\n        content: attr(data-text);\r\n        line-height:50px;\r\n        max-width:0%;\r\n        position: absolute;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        color: tomato;\r\n        }\r\n        @keyframes loading1 {\r\n            0% {\r\n                opacity:1;\r\n            }\r\n            90% {\r\n                opacity:1;\r\n            }\r\n            100% {\r\n                opacity:0;\r\n            }\r\n        }\r\n        @keyframes loading {\r\n            0% {\r\n                max-width: 100%;\r\n            }\r\n        }\r\n            }\r\n            @media screen and (max-width:1500px){\r\n            p{\r\n                \r\n                left:unset;\r\n                right:8%;\r\n                transform:translateX(0)\r\n            }\r\n            }\r\n            @media screen and (max-width:1100px){\r\n            p{\r\n                display:none;\r\n               \r\n            }\r\n            }\r\n            @media screen and (max-width:768px){\r\n            margin:auto;\r\n            }\r\n`\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n    margin-left:45px;\r\n    @media screen and (max-width:768px){\r\n      margin:auto;\r\n      width:100%;\r\n    }\r\n`\r\n\r\nconst Item = styled.li`\r\n    position:relative;\r\n    font-size:20px;\r\n    width:100px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom:3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    color: ${props => props.current ? '#F5C518' : 'inherit'};\r\n    transition: border-bottom 0.5s ease-in-out ;\r\n    a{height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    @media screen and (max-width:768px){\r\n       font-size:17px;\r\n    }}\r\n    \r\n`\r\nconst Seader = styled.header`\r\n    color:white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    align-items:center;\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index:999;\r\n    box-shadow:0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n    opacity:${props => props.state ? '1' : '0'};\r\n    transition:1s all;\r\n    ${Item}{\r\n        width:200px;\r\n        a{\r\n            color:white;\r\n        }\r\n    }\r\n    @media screen and (max-width:768px){\r\n    margin:auto;\r\n    }\r\n`\r\nconst Image = styled.img`\r\n    box-sizing:border-box;\r\n    display:block;\r\n    width:30px;\r\n    height:25px;\r\n    position:absolute;\r\n    top:60%;\r\n    left:50%;\r\n    transform:translate(-50%,-50%);\r\n    animation:startUp 1s ease-in-out 4;\r\n    transform-origin:top left;\r\n    @media screen and (max-width:768px) {\r\n        animation:unset;\r\n    }\r\n    @keyframes startUp {\r\n        0%{\r\n            transform:rotate(0deg) translate(-50%,-50%)\r\n        }\r\n        5%{\r\n            transform:rotate(20deg) translate(-50%,-50%)\r\n        }\r\n        10%{\r\n            transform:rotate(0deg) translate(-50%,-50%)\r\n        }\r\n        15%{\r\n            transform:rotate(-20deg) translate(-50%,-50%)\r\n        }\r\n        20%{\r\n            transform:rotate(0deg) translate(-50%,-50%)\r\n        }\r\n        25%{\r\n            transform:rotate(20deg) translate(-50%,-50%)\r\n        }\r\n        30%{\r\n            transform:rotate(0deg) translate(-50%,-50%)\r\n        }\r\n        35%{\r\n            transform:rotate(-20deg) translate(-50%,-50%)\r\n        }\r\n        40%{\r\n            transform:rotate(0deg) translate(-50%,-50%)\r\n        }\r\n        100%{\r\n            transform:rotate(0deg) translate(-50%,-50%)\r\n        }\r\n    }\r\n\r\n\r\n`\r\n\r\nconst Slink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    @media screen and (max-width:768px){\r\n       font-size:17px;\r\n    }\r\n`\r\n\r\nconst Headers = ({ location: { pathname } }) => {\r\n\r\n    const [state, setState] = useState(false)\r\n    const onClick = (e) => {\r\n        e.preventDefault()\r\n        setState(prev => !prev)\r\n    }\r\n    return (<>\r\n        <Seader state={state}>\r\n            <List>\r\n                <Item>\r\n                    <a target='_blank' rel='noopener noreferrer' href={'https://junchi86.github.io/max'}>\r\n                        <FaExternalLinkAlt style={{ color: 'f5c518', marginRight: '10px' }} />Eng ver.\r\n                </a>\r\n                </Item>\r\n                <Item>\r\n                    <a target='_blank' rel='noopener noreferrer' href={'https://junchi86.github.io/index'}>\r\n                        <FaExternalLinkAlt style={{ color: 'f5c518', marginRight: '10px' }} />Momentum\r\n                </a>\r\n                </Item>\r\n            </List>\r\n        </Seader>\r\n        <Header state={state}>\r\n            <List>\r\n                {/* <a style={{ color: 'pink', fontWeight: 700 }} target='_blank' rel='noopener noreferrer' href={'https://junchi86.github.io/index'}>\r\n                        \r\n                        </a> */}\r\n                <Item style={{ cursor: 'pointer' }} onClick={onClick}>\r\n                    <Image src={logo} />\r\n                </Item>\r\n                <Item current={pathname === '/' || pathname.indexOf('/movie/') === 0}>\r\n                    <Slink to='/'>\r\n                        영화\r\n                    </Slink>\r\n                </Item>\r\n                <Item current={pathname.indexOf('/tv/') === 0 || pathname.indexOf('/show/') === 0}>\r\n                    <Slink to='/tv/'>\r\n                        TV\r\n                    </Slink>\r\n                </Item>\r\n                <Item current={pathname.indexOf('/search/') === 0}>\r\n                    < Slink to='/search/'>\r\n                        검색\r\n                    </Slink>\r\n                </Item>\r\n\r\n            </List>\r\n            <p id='alert' data-text={'모바일 최적화 완료! (https://junchi86.github.io/max)'}>{'모바일 최적화 완료! (https://junchi86.github.io/max)'}</p>\r\n        </Header ></>\r\n    )\r\n}\r\n\r\nexport default withRouter(Headers)","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport noneImage from '../assets/none-png-2.png'\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n    a{\r\n        color:inherit;\r\n        text-decoration:none;\r\n        font-size:inherit;\r\n        font:inherit\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    width:${props => props.modal ? '40%' : '200px'};\r\n    height:${props => props.modal ? '80%' : '400px'};\r\n    position:${props => props.modal ? 'fixed' : 'unset'};\r\n    top:${props => props.modal ? '50%' : 'unset'};\r\n    left:${props => props.modal ? '50%' : 'unset'};\r\n    transform:${props => props.modal ? 'translate(-50%,-50%)' : 'unset'};\r\n    margin:${props => props.modal ? 'auto' : '0 10px 0 0'};\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    background-image:url(${props => props.bgUrl});\r\n    @media screen and (max-width:768px){\r\n        width:${props => props.modal ? '100%' : '100px'};\r\n        height:${props => props.modal ? '100%' : '150px'};\r\n        margin-right:10px;\r\n        border-radius:2px;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n    cursor:pointer;\r\n    width:${props => props.modal ? '100%' : 'unset'};\r\n    height:${props => props.modal ? '100%' : 'unset'};\r\n    position:${props => props.modal ? 'fixed' : 'unset'};\r\n    top:${props => props.modal ? '50%' : 'unset'};\r\n    left:${props => props.modal ? '50%' : 'unset'};\r\n    transform:${props => props.modal ? 'translate(-50%,-50%)' : 'unset'};\r\n    margin:${props => props.modal ? 'auto' : '0 10px 0 0'};\r\n    background:${props => props.modal ? 'rgba(0,0,0,0.7)' : 'unset'};\r\n`\r\n\r\nconst CastProfileImages = ({ imgUrl }) => {\r\n    const [modal, setModal] = useState(false)\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        setModal(prev => !prev)\r\n    }\r\n    return (\r\n        <Container>\r\n            <ImageContainer onClick={handleClick} modal={modal}>\r\n                <Image modal={modal} bgUrl={imgUrl && imgUrl ? `https://image.tmdb.org/t/p/original${imgUrl}` : noneImage} />\r\n            </ImageContainer>\r\n        </Container>)\r\n}\r\n\r\nCastProfileImages.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imgUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default CastProfileImages","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Loader from '../../../Components/Loader'\r\nimport noneImage from '../../../assets/none-png-2.png'\r\nimport { Helmet } from 'react-helmet'\r\nimport Error from '../../../Components/Error'\r\nimport Cast from '../../../Components/Cast'\r\nimport CastProfileImages from '../../../Components/CastProfileImages'\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding:70px;\r\n    \r\n    @media screen and (max-width:768px) {\r\n        padding:0;\r\n        overflow-y:auto;\r\n        height:100%;\r\n    }\r\n`\r\nconst Backdrop = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:calc(100vh - 50px);\r\n    background-image:url(${props => props.imgBg});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    filter:blur(3px);\r\n    opacity:0.5;\r\n    @media screen and (max-width:768px) {\r\n        width:100%;\r\n        margin:auto;\r\n        z-index:-1;\r\n        top:0;\r\n        left:0;\r\n        position:fixed;\r\n        height:calc(100vh);\r\n        z-index:-1;\r\n        opacity:0.3\r\n    }\r\n`\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    width: 100%;\r\n    position:relative;\r\n    z-index:1;\r\n    height:100%;\r\n    border-radius:5px;\r\n    @media screen and (max-width:768px) {\r\n        flex-direction:column;\r\n        position: relative;\r\n        width:100%;\r\n    }\r\n`\r\n\r\nconst Cover = styled.div`\r\n    border-radius:5px;\r\n    min-width:30%;\r\n    margin-right:20px;\r\n    background-image:url(${props => props.imgBg});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    height:100%;\r\n    z-index:0;\r\n    @media screen and (max-width:768px) {\r\n        display:none;\r\n    }\r\n`\r\n\r\nconst Data = styled.div`\r\n    width:65%;\r\n    height:100%;\r\n    overflow: auto;\r\n        -ms-overflow-style: none;\r\n        &::-webkit-scrollbar {\r\n            background:rgba(0,0,0,0.1)\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255,255,255,0.5);\r\n    }\r\n    margin-left:10px;\r\n    @media screen and (max-width:768px) {\r\n        padding-top:5%;\r\n        width:90%;\r\n        margin-left:0;\r\n        margin:0 auto;\r\n        overflow:unset;\r\n        order:1;\r\n    }\r\n`\r\n\r\nconst Title = styled.h3`\r\n    font-size:32px;\r\n    @media screen and (max-width:768px) {\r\n       font-size:23px;\r\n       color:yellow;\r\n    }\r\n`\r\n\r\nconst ItemContainer = styled.div`\r\n    margin:20px 0;\r\n    @media screen and (max-width:768px) {\r\n        width:90%;\r\n       margin:15px 0 10px;\r\n       overflow:hidden;\r\n       text-overflow:ellipsis;\r\n       white-space:nowrap;\r\n    }\r\n`\r\n\r\nconst Item = styled.span`\r\n\r\n`\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n    @media screen and (max-width:768px) {\r\n       margin:0 5px;\r\n    }\r\n`\r\n\r\nconst Overview = styled.div`\r\n    font-size:18px;\r\n    padding:5px 5px 0px 0px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    p{\r\n        color:#f5c518;\r\n    }\r\n    @media screen and (max-width:768px) {\r\n       width:100%;\r\n       font-size:14px;\r\n       div{\r\n        width:100%;\r\n    }\r\n    }\r\n\r\n`\r\nconst IMDb = styled.span`\r\n    font-size:18px;\r\n    font-weight:700;\r\n    margin-left:10px;\r\n    padding:0 6px;\r\n    text-align:center;\r\n    vertical-align:center;\r\n    border-radius:4px;\r\n    color:black;\r\n    background:#F5C518;\r\n    @media screen and (max-width:768px){\r\n        font-size:16px;\r\n    }\r\n`\r\nconst Foot = styled.div`\r\n    display:none;\r\n    @media screen and (max-width:768px) {\r\n        display:block;\r\n       height:20px;\r\n    }\r\n`\r\nconst CastContainer = styled.div`\r\n    padding:10px 0 0;\r\n    margin:auto;\r\n    \r\n`\r\nconst CastPerson\r\n    = ({ loading, error, result }) => {\r\n        return (\r\n            loading ? <Loader /> : error ? <Error data={'No Cast Data'} /> : result &&\r\n                <Container>\r\n                    <Helmet>\r\n                        <title>\r\n                            {result.name && result.name} | Maflix\r\n                    </title>\r\n                    </Helmet>\r\n                    <Backdrop imgBg={result.profile_path && result.profile_path ? `https://image.tmdb.org/t/p/w500${result.profile_path}` : null} />\r\n                    <Content>\r\n                        <Cover imgBg={result.profile_path && result.profile_path ? `https://image.tmdb.org/t/p/original${result.profile_path}` : noneImage} />\r\n                        <Data>\r\n                            <Title>\r\n                                {result.name && result.name}\r\n                                <IMDb>\r\n                                    {result.imdb_id && result.imdb_id ? <a href={`https://www.imdb.com/name/${result.imdb_id}`} rel='noopener noreferrer' target='_blank'>IMDB</a> : 'IMDB'}\r\n                                </IMDb>\r\n                            </Title>\r\n                            <ItemContainer>\r\n                                <Item>{result.birthday && result.birthday.substring(0, 4)}</Item>\r\n                                <Divider>~</Divider>\r\n                                <Item>{result.deathday && result.deathday.substring(0, 4)}</Item>\r\n                                <Divider>▪</Divider>\r\n                                <Item>{result.place_of_birth && result.place_of_birth}</Item>\r\n                                <Divider>▪</Divider>\r\n                                <Item>{result.known_for_department && result.known_for_department}</Item>\r\n                                <Divider>▪</Divider>\r\n                                <Item>{result.gender && result.gender === 1 ? 'Female' : 'Male'}</Item>\r\n                            </ItemContainer>\r\n                            <Overview>\r\n                                {result.also_known_as && <>\r\n                                    <p>언어별 이름</p>\r\n                                    <div> {result.also_known_as.map((i, index) => index === result.also_known_as.length - 1 ? i : `${i} / `)}</div>\r\n                                    <br /></>}\r\n                                {result.biography && result.biography.length > 0 && <>\r\n                                    <p>약력</p>\r\n                                    <div className=\"bio\">\r\n                                        {result.biography}\r\n                                    </div></>}\r\n                                <p>이미지</p>\r\n                            </Overview>\r\n                            <CastContainer>\r\n                                {result.images && result.images.profiles.length > 0 && (\r\n                                    <Cast>{result.images.profiles.map((i, index) => <CastProfileImages key={index} imgUrl={i.file_path} />)}</Cast>\r\n                                )}\r\n                            </CastContainer>\r\n                        </Data>\r\n                    </Content>\r\n                    <Foot></Foot>\r\n                </Container >)\r\n    }\r\n\r\nCastPerson\r\n    .propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    result: PropTypes.object\r\n}\r\n\r\nexport default CastPerson\r\n","import React, { useState, useEffect } from 'react'\r\nimport { moviesApi } from '../../../api'\r\nimport CastPerson from './CastPerson'\r\n\r\nconst CastPeople = (props) => {\r\n    const { match: { params: { id } } } = props\r\n    const parsedId = parseInt(id)\r\n    const [state, setState] = useState({ loading: true, error: null, data: null })\r\n\r\n    useEffect(() => {\r\n        const getPerson = async () => {\r\n            try {\r\n                const { data } = await moviesApi.castPeople(parsedId)\r\n                setState(prev => { return { ...prev, data, loading: false } })\r\n            } catch (error) {\r\n                setState(prev => { return { ...prev, error, loading: false } })\r\n            }\r\n        }\r\n        getPerson()\r\n    }, [parsedId])\r\n    const { loading, error, data } = state\r\n    return (\r\n        <CastPerson loading={loading} error={error} result={data} />\r\n    )\r\n}\r\n\r\nexport default CastPeople\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Loader from '../../../Components/Loader'\r\nimport noneImage from '../../../assets/none-png-2.png'\r\nimport { Helmet } from 'react-helmet'\r\nimport Error from '../../../Components/Error'\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding:70px;\r\n    @media screen and (max-width:768px) {\r\n        padding:0;\r\n    }\r\n`\r\nconst Backdrop = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:calc(100vh - 50px);\r\n    background-image:url(${props => props.imgBg});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    filter:blur(3px);\r\n    opacity:0.5;\r\n    @media screen and (max-width:768px) {\r\n        display:none;\r\n    }\r\n`\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    width: 100%;\r\n    position:relative;\r\n    z-index:1;\r\n    height:100%;\r\n    border-radius:5px;\r\n    @media screen and (max-width:768px) {\r\n        flex-direction:column;\r\n        position: relative;\r\n        width:100%;\r\n    }\r\n`\r\n\r\nconst Cover = styled.div`\r\n    border-radius:5px;\r\n    min-width:30%;\r\n    margin-right:20px;\r\n    background-image:url(${props => props.imgBg});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    height:100%;\r\n    z-index:0;\r\n    @media screen and (max-width:768px) {\r\n        width:100%;\r\n        margin:auto;\r\n        z-index:-1;\r\n        top:0;\r\n        left:0;\r\n        position:fixed;\r\n        height:calc(100vh);\r\n        z-index:-1;\r\n        opacity:0.3\r\n    }\r\n`\r\n\r\nconst Data = styled.div`\r\n    width:65%;\r\n    height:100%;\r\n    overflow: auto;\r\n        -ms-overflow-style: none;\r\n        &::-webkit-scrollbar {\r\n            background:rgba(0,0,0,0.1)\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            background: rgba(255,255,255,0.2);\r\n    }\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: rgba(255,255,255,0.5);\r\n    }\r\n    margin-left:10px;\r\n    @media screen and (max-width:768px) {\r\n        padding-top:5%;\r\n        width:90%;\r\n        margin-left:0;\r\n        margin:0 auto;\r\n        overflow:unset;\r\n    }\r\n`\r\n\r\nconst Title = styled.h3`\r\n    font-size:32px;\r\n    font-weight:600;\r\n    padding-bottom:30px;\r\n    @media screen and (max-width:768px) {\r\n       font-size:23px;\r\n       color:yellow;\r\n    }\r\n`\r\nconst ImageContainer = styled.div`\r\n    display:flex;\r\n    padding:20px;\r\n    border-top:2px solid rgba(255,255,255,0.2);\r\n    border-bottom:2px solid rgba(255,255,255,0.2);\r\n    align-items:center;\r\n    @media screen and (max-width:768px) {\r\n       flex-direction:column;\r\n       padding:10px;\r\n    }\r\n`\r\nconst Image = styled.img`\r\n    display:block;\r\n    border-radius:5px;\r\n    width:30%;\r\n    margin-right:15px;\r\n    @media screen and (max-width:768px) {\r\n       order:1;\r\n       width:100%;\r\n       margin:auto;\r\n       padding:5px;\r\n       border-radius:12px;\r\n    }\r\n`\r\nconst Overview = styled.div`\r\n    font-size:18px;\r\n    padding:5px 0 5px;\r\n    line-height:1.5;\r\n    width:70%;\r\n    div{\r\n        width:90%;\r\n        padding-left:15px;\r\n    }\r\n    P:first-child{\r\n        font-size:23px;\r\n        color:yellow;\r\n        padding:0;\r\n    }\r\n    p{\r\n        color:#f5c518;\r\n        font-weight:500;\r\n        padding:10px;\r\n    }\r\n    @media screen and (max-width:768px) {\r\n        order:2;\r\n       width:100%;\r\n       font-size:14px;\r\n       div{\r\n        width:100%;\r\n    }\r\n    P:first-child{\r\n        font-size:18px;\r\n        color:yellow;\r\n    }\r\n    p{\r\n        padding:0 10px\r\n    }\r\n    }\r\n\r\n`\r\nconst Foot = styled.div`\r\n    display:none;\r\n    @media screen and (max-width:768px) {\r\n        display:block;\r\n       height:20px;\r\n    }\r\n`\r\nconst SeasonPresenter\r\n    = ({ loading, error, result, title }) => {\r\n        return (\r\n            loading ? <Loader /> : error ? <Error data={\"No Season data....\"} /> : result &&\r\n                <Container>\r\n                    <Helmet>\r\n                        <title>\r\n                            {result.name && title && title + ' ' + result.name} | Maflix\r\n                    </title>\r\n                    </Helmet>\r\n                    <Backdrop imgBg={result.poster_path && result.poster_path ? `https://image.tmdb.org/t/p/w500${result.poster_path}` : null} />\r\n                    <Content>\r\n                        <Cover imgBg={result.poster_path && result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : noneImage} />\r\n                        <Data>\r\n                            <Title>\r\n                                {result.name && title && title + ' - ' + result.name}\r\n                            </Title>\r\n                            {result.episodes && result.episodes.length > 0 && result.episodes.map((i) => (\r\n                                <ImageContainer key={i.id}>\r\n                                    <Overview >\r\n                                        <p>{i.episode_number ? 'Episode ' + i.episode_number + ' : ' : null} {i.name && i.name}</p>\r\n                                        <p>방영 일자</p>\r\n                                        <div>{i.air_date && i.air_date}</div>\r\n                                        {i.overview &&\r\n                                            <>\r\n                                                <p>줄거리</p>\r\n                                                <div>{i.overview}</div>\r\n                                            </>}\r\n                                    </Overview>\r\n                                    <Image src={i.still_path ? `https://image.tmdb.org/t/p/original${i.still_path}` : noneImage} />\r\n                                </ImageContainer>))}\r\n\r\n                            <Foot></Foot>\r\n                        </Data>\r\n                    </Content>\r\n                </Container >)\r\n    }\r\n\r\nSeasonPresenter\r\n    .propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    result: PropTypes.object\r\n}\r\n\r\nexport default SeasonPresenter\r\n","import SeasonContainer from './SeasonContainer'\r\n\r\nexport default SeasonContainer","import React, { useState, useEffect } from 'react'\r\nimport { tvApi } from '../../../api'\r\nimport SeasonPresenter from './SeasonPresenter'\r\n\r\nconst SeasonContainer = (props) => {\r\n    const { match: { params: { id, season, title } } } = props\r\n    const [state, setState] = useState({ loading: true, error: null, data: null })\r\n    useEffect(() => {\r\n        const parsedId = parseInt(id)\r\n        const parsedSeason = parseInt(season)\r\n        const getPerson = async () => {\r\n            try {\r\n                const { data } = await tvApi.tvSeasons(parsedId, parsedSeason)\r\n                setState(prev => { return { ...prev, data, loading: false, title } })\r\n            } catch (error) {\r\n                setState(prev => { return { ...prev, error, loading: false } })\r\n            }\r\n        }\r\n        getPerson()\r\n    }, [id, season, title])\r\n    const { loading, error, data } = state\r\n    return (\r\n        <SeasonPresenter loading={loading} error={error} result={data} title={title} />\r\n    )\r\n}\r\n\r\nexport default SeasonContainer\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport noneImage from '../assets/none-png-2.png'\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n    min-height:350px;\r\n    width:100%;\r\n    @media screen and (max-width:768px) {\r\n        min-height:200px;\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    width:200px;\r\n    height:300px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    transition: 0.1s linear;\r\n    background-image:url(${props => props.bgUrl});\r\n    @media screen and (max-width:768px){\r\n        margin: 0 auto;\r\n        width:94%;\r\n        height:130px;\r\n        border-radius:2px;\r\n    }\r\n`\r\n\r\nconst Rating = styled.span`\r\n    font-size:15px;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    right: 10px;\r\n    opacity: 0;\r\n    transition: 0.1s linear;\r\n    @media screen and (max-width:768px) {\r\n        display:none;\r\n    }\r\n    `\r\n\r\nconst ImageContainer = styled.div`\r\nmargin-bottom: 5px;\r\nposition: relative;\r\n    &:hover{\r\n    ${ Image} {\r\n        opacity: 0.3;\r\n    }\r\n    ${ Rating} {\r\n        opacity: 1;\r\n    }\r\n}\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-size:18px;\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    overflow:hidden;\r\n    text-overflow:ellipsis;\r\n    white-space:nowrap;\r\n    max-width:200px;\r\n    @media screen and (max-width:768px) {\r\n        font-size:15px;\r\n        width:94%;\r\n    }\r\n    `\r\n\r\nconst Year = styled.span`\r\n    font-size: 15px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n    `\r\n\r\nconst SuperPoster = ({ id, imgUrl, title, rating, year, isMovie = false }) =>\r\n\r\n    <Link to={isMovie ? `/movie/${id}/` : `/show/${id}/`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imgUrl ? `https://image.tmdb.org/t/p/w500${imgUrl}` : noneImage} />\r\n\r\n                <Rating>\r\n                    <span role='img' aria-label='rating' >\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 21 ? title.substring(0, 21) + '...' : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n\r\nSuperPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imgUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default SuperPoster","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FaArrowCircleUp } from 'react-icons/fa'\r\n\r\nconst ToTop = styled.div`\r\n        display:block;\r\n        opacity:1;\r\n        visibility:visible;\r\n        position:fixed;\r\n        bottom:3vh;\r\n        right:50%;\r\n        transform:translateX(-50%);\r\n        z-index:50;\r\n        text-align:center;\r\n        border-radius:50%;\r\n        font-size:50px;\r\n        transition:0.3s all;\r\n        cursor: pointer;\r\n        animation:tong 1s 20 ease-in-out;\r\n        color:floralwhite;\r\n        @media screen and (max-width:768px) {\r\n            bottom:15px;\r\n            right:5px;\r\n            font-size:35px;\r\n            animation:unset;\r\n    }\r\n    @keyframes tong {\r\n        50%{\r\n            bottom:20px;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Footer() {\r\n    const [state, setState] = useState(true)\r\n    const toggleVisibility = () => {\r\n        if (window.pageYOffset > 300) {\r\n            setState(false);\r\n        } else {\r\n            setState(true);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", toggleVisibility);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", toggleVisibility);\r\n        };\r\n    });\r\n    document.addEventListener('scroll', (e) => { })\r\n\r\n    const toTheTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ToTop style={state ? { visibility: 'hidden', opacity: '0' } : { visibility: 'visible', opacity: '1' }} onClick={toTheTop}><span role='img' aria-label='to the top'><FaArrowCircleUp /></span></ToTop>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { moviesApi, tvApi } from '../api'\r\nimport Loader from './Loader'\r\nimport SuperPoster from './SuperPoster'\r\nimport Footer from './Footer'\r\n\r\nconst Container = styled.div`\r\nwidth:94%;\r\npadding:30px 10px 10px;\r\nmargin:auto;\r\n@media screen and (max-width:768px) {\r\n    padding:10px;\r\n    width:100%;\r\n}\r\n`\r\nconst Sect = styled.div`\r\n    margin-top:10px;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:space-evenly;\r\n    @media screen and (max-width:768px){\r\n    display:grid;\r\n    margin: 10px auto 10px;\r\n    grid-template-columns: repeat(auto-fill,25%);\r\n    grid-gap:0;\r\n    }\r\n`\r\nconst Title = styled.p`\r\n    position:relative;\r\n    font-size: 20px;\r\n    padding:0 0 20px;\r\n    font-weight:600;\r\n    @media screen and (max-width:768px) {\r\n        padding:10px 0 5px 5px;\r\n    }\r\n`\r\n\r\nconst SuperSection = ({ match: { params } }) => {\r\n    const { type, section, search } = params\r\n    const [state, setState] = useState({ loading: true, error: null, resultShows: [], result: [] })\r\n    const [page, setPage] = useState(3)\r\n    const [scroll, setScroll] = useState(false)\r\n    const [title, setTitle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                if (type === 'movie' && section === 'now') {\r\n                    const { data: { results: movies1 } } = await moviesApi.nowPlaying(1)\r\n                    const { data: { results: movies2 } } = await moviesApi.nowPlaying(2)\r\n                    const movies = [...movies1, ...movies2]\r\n                    setTitle('현재 상영중')\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'movie' && section === 'up') {\r\n                    const { data: { results: movies1 } } = await moviesApi.upcoming(1)\r\n                    const { data: { results: movies2 } } = await moviesApi.upcoming(2)\r\n                    const movies = [...movies1, ...movies2]\r\n                    setTitle('개봉 예정')\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'movie' && section === 'popmovie') {\r\n                    const { data: { results: movies1 } } = await moviesApi.popular(1)\r\n                    const { data: { results: movies2 } } = await moviesApi.popular(2)\r\n                    const movies = [...movies1, ...movies2]\r\n                    setTitle('흥행순')\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'movie' && section === 'search') {\r\n                    const { data: { results: movies1 } } = await moviesApi.search(search, 1)\r\n                    const { data: { results: movies2 } } = await moviesApi.search(search, 2)\r\n                    const movies = [...movies1, ...movies2]\r\n                    setTitle(`${search} - 영화 검색 결과`)\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'top') {\r\n                    const { data: { results: shows1 } } = await tvApi.topRated(1)\r\n                    const { data: { results: shows2 } } = await tvApi.topRated(2)\r\n                    const shows = [...shows1, ...shows2]\r\n                    setTitle('평점순')\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.result, ...shows] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'popshow') {\r\n                    const { data: { results: shows1 } } = await tvApi.popular(1)\r\n                    const { data: { results: shows2 } } = await tvApi.popular(2)\r\n                    const shows = [...shows1, ...shows2]\r\n                    setTitle('훙행순')\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.result, ...shows] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'air') {\r\n                    const { data: { results: shows1 } } = await tvApi.airingToday(1)\r\n                    const { data: { results: shows2 } } = await tvApi.airingToday(2)\r\n                    const shows = [...shows1, ...shows2]\r\n                    setTitle('현재 방영중')\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.result, ...shows] }))\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'search') {\r\n                    const { data: { results: shows1 } } = await tvApi.search(search, 1)\r\n                    const { data: { results: shows2 } } = await tvApi.search(search, 2)\r\n                    const shows = [...shows1, ...shows2]\r\n                    setTitle(`${search} - TV 검색 결과`)\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.resultShows, ...shows] }))\r\n                    setScroll(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                setState(prev => ({ ...prev, error: 'error' }))\r\n            }\r\n        }\r\n        getData()\r\n    }, [type, section, search])\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                if (type === 'movie' && section === 'now' && scroll) {\r\n                    const { data: { results: movies } } = await moviesApi.nowPlaying(page)\r\n                    setTitle('현재 상영중')\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'movie' && section === 'up' && scroll) {\r\n                    const { data: { results: movies } } = await moviesApi.upcoming(page)\r\n                    setTitle('개봉 예정')\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'movie' && section === 'popmovie' && scroll) {\r\n                    const { data: { results: movies } } = await moviesApi.popular(page)\r\n                    setTitle('흥행순')\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'movie' && section === 'search' && scroll) {\r\n                    const { data: { results: movies } } = await moviesApi.search(search, page)\r\n                    setTitle(`${search} - 영화 검색 결과`)\r\n                    setState(prev => ({ ...prev, loading: false, result: [...prev.result, ...movies] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'top' && scroll) {\r\n                    const { data: { results: shows } } = await tvApi.topRated(page)\r\n                    setTitle('평점순')\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.resultShows, ...shows] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'popshow' && scroll) {\r\n                    const { data: { results: shows } } = await tvApi.popular(page)\r\n                    setTitle('흥행순')\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.resultShows, ...shows] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'air' && scroll) {\r\n                    const { data: { results: shows } } = await tvApi.airingToday(page)\r\n                    setTitle('현재 방영중')\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.resultShows, ...shows] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n                if (type === 'show' && section === 'search' && scroll) {\r\n                    const { data: { results: shows } } = await tvApi.search(search, page)\r\n                    setTitle(`${search} - TV 검색 결과`)\r\n                    setState(prev => ({ ...prev, loading: false, resultShows: [...prev.resultShows, ...shows] }))\r\n                    setPage(prev => prev + 1)\r\n                    setScroll(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                setState(prev => ({ ...prev, error: 'error' }))\r\n            }\r\n        }\r\n        if (scroll)\r\n            getData()\r\n    }, [section, type, scroll, page, search])\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 200) {\r\n                if (page < 1000)\r\n                    setScroll(true)\r\n            }\r\n            else {\r\n                return\r\n            }\r\n        }\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [page])\r\n\r\n    const { loading, error, result, resultShows } = state\r\n    return (\r\n        loading ? <Loader /> : error ? null : (result || resultShows) &&\r\n            <>\r\n                <Container>\r\n                    <Title>\r\n                        {title}\r\n                    </Title>\r\n                    <Sect>\r\n                        {resultShows && resultShows.length > 0 && resultShows.map(i => <SuperPoster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.name} rating={i.vote_average} year={i.first_air_date && i.first_air_date.substring(0, 4)} isMovie={false} />)}\r\n                        {result && result.length > 0 && result.map(i => <SuperPoster key={i.id} id={i.id} imgUrl={i.poster_path} title={i.title} rating={i.vote_average} year={i.release_date && i.release_date.substring(0, 4)} isMovie={true} />)}\r\n                    </Sect>\r\n                    <Footer />\r\n                </Container>\r\n\r\n            </>\r\n    )\r\n}\r\n\r\nexport default SuperSection\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Home from '../Routes/Home'\r\nimport TV from '../Routes/TV'\r\nimport Search from '../Routes/Search'\r\nimport Detail from '../Routes/Detail'\r\nimport Header from './Header'\r\nimport CastPeople from '../Routes/Detail/CastPeople/CastPeople'\r\nimport Error from './Error'\r\nimport SeasonDetail from '../Routes/Detail/SeasonDetail/'\r\nimport SuperSection from './SuperSection'\r\n\r\nexport default () =>\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/tv/' exact component={TV} />\r\n            <Route path='/search/' exact component={Search} />\r\n            <Route path='/search/:term/' component={Search} />\r\n            <Route path='/tv/:id/seasons/:season/:title/' component={SeasonDetail} />\r\n            <Route path='/person/:id/' component={CastPeople} />\r\n            <Route path='/:type/sub/:section/:search' component={SuperSection} />\r\n            <Route path='/:type/sub/:section/' component={SuperSection} />\r\n            <Route path='/:type/:id/' component={Detail} />\r\n            <Route path='/error/' exact component={Error} />\r\n            <Redirect from='*' to='/error/' />\r\n        </Switch>\r\n    </Router>\r\n\r\n\r\n\r\n","import { createGlobalStyle } from 'styled-components'\r\nimport reset from 'styled-reset'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n        margin:0;\r\n    }\r\n`\r\nexport default GlobalStyles","import React from 'react'\nimport Router from './Router'\nimport GlobalStyles from './GlobalStyles'\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App'\nimport './api'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/none-png-2.b36f7388.png\";"],"sourceRoot":""}